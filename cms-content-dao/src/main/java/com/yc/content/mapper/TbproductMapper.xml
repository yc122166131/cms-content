<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yc.content.mapper.TbproductMapper" >

<!-- resultMap 里面 只需要放一些 特殊的 (即 pojo 和  数据库字段 不匹配的 字段 )做一下映射即可 -->
 <resultMap id="jdproduct" type="jdproduction" >
    <id column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="supCate_name" property="productType_1st" jdbcType="VARCHAR" />
    <result column="subCate_name" property="productType_2nd" jdbcType="VARCHAR" />
  </resultMap>

<!-- 也可以指定 查询出 一些 字段 (其余的 全部为 null) -->
  <select id="getAll" resultMap="jdproduct">
    select product_name,supCate_name from yc_product 
  </select>
  
<!--   <insert id="insertJDItemInfo" parameterType="hashmap">
	  insert into yc_product(standard_id,item_id)
	  values
	  <foreach collection="itemIdList" index="index" item="item"  separator="," >
	    (#{standardId,jdbcType=INTEGER}, #{item,jdbcType=INTEGER})
	  </foreach>
</insert> -->




 <insert id="insertJDItemInfo" parameterType="java.util.List">
	  insert into yc_product(product_id,product_name,imgPath,price,commentAmount,companyName,supCate_name,type_id,brandName)
  values
  <foreach collection="list" item="item" index="index"
   separator=",">
   (#{item.productId},#{item.productName,jdbcType=VARCHAR},#{item.imgPath,jdbcType=VARCHAR},#{item.price,jdbcType=VARCHAR},
    #{item.commentAmount,jdbcType=VARCHAR}, #{item.companyName,jdbcType=VARCHAR}, #{item.productType_1st,jdbcType=VARCHAR},
    #{item.productType_2nd,jdbcType=VARCHAR}, #{item.brandName,jdbcType=VARCHAR})
  </foreach>

</insert>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
</mapper>